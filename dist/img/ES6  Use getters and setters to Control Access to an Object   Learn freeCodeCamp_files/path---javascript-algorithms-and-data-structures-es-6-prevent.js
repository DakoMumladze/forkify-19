webpackJsonp([0xe0b7d8a7baa3],{3950:function(e,t){e.exports={data:{challengeNode:{title:"Prevent Object Mutation",description:["As seen in the previous challenge, <code>const</code> declaration alone doesn't really protect your data from mutation. To ensure your data doesn't change, JavaScript provides a function <code>Object.freeze</code> to prevent data mutation.","Once the object is frozen, you can no longer add, update, or delete properties from it. Any attempt at changing the object will be rejected without an error.",'<blockquote>let obj = {<br>&nbsp;&nbsp;name:"FreeCodeCamp",<br>&nbsp;&nbsp;review:"Awesome"<br>};<br>Object.freeze(obj);<br>obj.review = "bad"; //will be ignored. Mutation not allowed<br>obj.newProp = "Test"; // will be ignored. Mutation not allowed<br>console.log(obj); <br>// { name: "FreeCodeCamp", review:"Awesome"}</blockquote>',"<hr>","In this challenge you are going to use <code>Object.freeze</code> to prevent mathematical constants from changing. You need to freeze the <code>MATH_CONSTANTS</code> object so that no one is able alter the value of <code>PI</code>, add, or delete properties ."],challengeType:1,videoUrl:null,fields:{slug:"/javascript-algorithms-and-data-structures/es6/prevent-object-mutation",blockName:"ES6",tests:[{text:"Do not replace <code>const</code> keyword.",testString:"getUserInput => assert(getUserInput('index').match(/const/g), 'Do not replace <code>const</code> keyword.');"},{text:"<code>MATH_CONSTANTS</code> should be a constant variable (by using <code>const</code>).",testString:"getUserInput => assert(getUserInput('index').match(/const\\s+MATH_CONSTANTS/g), '<code>MATH_CONSTANTS</code> should be a constant variable (by using <code>const</code>).');"},{text:"Do not change original <code>MATH_CONSTANTS</code>.",testString:"getUserInput => assert(getUserInput('index').match(/const\\s+MATH_CONSTANTS\\s+=\\s+{\\s+PI:\\s+3.14\\s+};/g), 'Do not change original <code>MATH_CONSTANTS</code>.');"},{text:"<code>PI</code> equals <code>3.14</code>.",testString:"assert(PI === 3.14, '<code>PI</code> equals <code>3.14</code>.');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:'function freezeObj() {\n  "use strict";\n  const MATH_CONSTANTS = {\n    PI: 3.14\n  };\n  // change code below this line\n\n\n  // change code above this line\n  try {\n    MATH_CONSTANTS.PI = 99;\n  } catch( ex ) {\n    console.log(ex);\n  }\n  return MATH_CONSTANTS.PI;\n}\nconst PI = freezeObj();',head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/es6/use-arrow-functions-to-write-concise-anonymous-functions",id:"598f48a36c8c40764b4e52b3"},slug:"/javascript-algorithms-and-data-structures/es6/prevent-object-mutation"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-es-6-prevent-object-mutation-588ff67c6a874ffcab2c.js.map