webpackJsonp([0xdccd1a78300a],{3949:function(e,t){e.exports={data:{challengeNode:{title:"Mutate an Array Declared with const",description:["The <code>const</code> declaration has many use cases in modern JavaScript.","Some developers prefer to assign all their variables using <code>const</code> by default, unless they know they will need to reassign the value. Only in that case, they use <code>let</code>.","However, it is important to understand that objects (including arrays and functions) assigned to a variable using <code>const</code> are still mutable. Using the <code>const</code> declaration only prevents reassignment of the variable identifier.",'<blockquote>"use strict";<br>const s = [5, 6, 7];<br>s = [1, 2, 3]; // throws error, trying to assign a const<br>s[2] = 45; // works just as it would with an array declared with var or let<br>console.log(s); // returns [5, 6, 45]</blockquote>',"As you can see, you can mutate the object <code>[5, 6, 7]</code> itself and the variable <code>s</code> will still point to the altered array <code>[5, 6, 45]</code>. Like all arrays, the array elements in <code>s</code> are mutable, but because <code>const</code> was used, you cannot use the variable identifier <code>s</code> to point to a different array using the assignment operator.","<hr>","An array is declared as <code>const s = [5, 7, 2]</code>. Change the array to <code>[2, 5, 7]</code> using various element assignment."],challengeType:1,videoUrl:null,fields:{slug:"/javascript-algorithms-and-data-structures/es6/mutate-an-array-declared-with-const",blockName:"ES6",tests:[{text:"Do not replace <code>const</code> keyword.",testString:"getUserInput => assert(getUserInput('index').match(/const/g), 'Do not replace <code>const</code> keyword.');"},{text:"<code>s</code> should be a constant variable (by using <code>const</code>).",testString:"getUserInput => assert(getUserInput('index').match(/const\\s+s/g), '<code>s</code> should be a constant variable (by using <code>const</code>).');"},{text:"Do not change the original array declaration.",testString:"getUserInput => assert(getUserInput('index').match(/const\\s+s\\s*=\\s*\\[\\s*5\\s*,\\s*7\\s*,\\s*2\\s*\\]\\s*;?/g), 'Do not change the original array declaration.');"},{text:"<code>s</code> should be equal to <code>[2, 5, 7]</code>.",testString:"assert.deepEqual(s, [2, 5, 7], '<code>s</code> should be equal to <code>[2, 5, 7]</code>.');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:'const s = [5, 7, 2];\nfunction editInPlace() {\n  "use strict";\n  // change code below this line\n\n  // s = [2, 5, 7]; <- this is invalid\n\n  // change code above this line\n}\neditInPlace();',head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/es6/prevent-object-mutation",id:"587d7b87367417b2b2512b42"},slug:"/javascript-algorithms-and-data-structures/es6/mutate-an-array-declared-with-const"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-es-6-mutate-an-array-declared-with-const-70e62bfdf92f02fa511c.js.map