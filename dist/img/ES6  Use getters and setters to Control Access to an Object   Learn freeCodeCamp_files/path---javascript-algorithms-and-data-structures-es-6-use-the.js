webpackJsonp([0x831413f41f81],{3962:function(e,t){e.exports={data:{challengeNode:{title:"Use the Rest Operator with Function Parameters",description:["In order to help us create more flexible functions, ES6 introduces the <dfn>rest operator</dfn> for function parameters. With the rest operator, you can create functions that take a variable number of arguments. These arguments are stored in an array that can be accessed later from inside the function.","Check out this code:",'<blockquote>function howMany(...args) {<br>&nbsp;&nbsp;return "You have passed " + args.length + " arguments.";<br>}<br>console.log(howMany(0, 1, 2)); // You have passed 3 arguments<br>console.log(howMany("string", null, [1, 2, 3], { })); // You have passed 4 arguments.</blockquote>',"The rest operator eliminates the need to check the <code>args</code> array and allows us to apply <code>map()</code>, <code>filter()</code> and <code>reduce()</code> on the parameters array.","<hr>","Modify the function <code>sum</code> so that it uses the rest operator and it works in the same way with any number of parameters."],challengeType:1,videoUrl:null,fields:{slug:"/javascript-algorithms-and-data-structures/es6/use-the-rest-operator-with-function-parameters",blockName:"ES6",tests:[{text:"The result of <code>sum(0,1,2)</code> should be 3",testString:"assert(sum(0,1,2) === 3, 'The result of <code>sum(0,1,2)</code> should be 3');"},{text:"The result of <code>sum(1,2,3,4)</code> should be 10",testString:"assert(sum(1,2,3,4) === 10, 'The result of <code>sum(1,2,3,4)</code> should be 10');"},{text:"The result of <code>sum(5)</code> should be 5",testString:"assert(sum(5) === 5, 'The result of <code>sum(5)</code> should be 5');"},{text:"The result of <code>sum()</code> should be 0",testString:"assert(sum() === 0, 'The result of <code>sum()</code> should be 0');"},{text:"The <code>sum</code> function uses the <code>...</code> spread operator on the <code>args</code> parameter.",testString:"getUserInput => assert(getUserInput('index').match(/function\\s+sum\\s*\\(\\s*...args\\s*\\)\\s*{/g), 'The <code>sum</code> function uses the <code>...</code> spread operator on the <code>args</code> parameter.');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:'const sum = (function() {\n  "use strict";\n  return function sum(x, y, z) {\n    const args = [ x, y, z ];\n    return args.reduce((a, b) => a + b, 0);\n  };\n})();\nconsole.log(sum(1, 2, 3)); // 6',head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/es6/use-the-spread-operator-to-evaluate-arrays-in-place",id:"587d7b88367417b2b2512b47"},slug:"/javascript-algorithms-and-data-structures/es6/use-the-rest-operator-with-function-parameters"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-es-6-use-the-rest-operator-with-function-parameters-dd87bd4458428b2db71f.js.map